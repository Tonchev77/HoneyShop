@using HoneyShop.ViewModels.Shop
@using HoneyShop.Services.Core
@model HoneyShop.ViewModels.Shop.ShopIndexViewModel

@{
    ViewData["Title"] = "Shop";
}
<style>
    .pi-pic {
        position: relative;
        overflow: hidden;
        height: 300px; 
    }

        .pi-pic img {
            width: 100%;
            height: 300px;
            object-fit: cover; 
            object-position: center;
            transition: transform 0.3s ease;
        }

        .pi-pic:hover img {
            transform: scale(1.05);
        }

    .product-item {
        margin-bottom: 30px;
    }
</style>

<!-- Breadcrumb Section Begin -->
<div class="breacrumb-section">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb-text">
                    <a asp-controller="Home" asp-action="Index"><i class="fa fa-home"></i> Home</a>
                    <span>Shop</span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb Section Begin -->
<!-- Product Shop Section Begin -->
<section class="product-shop spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-3 col-md-6 col-sm-8 order-2 order-lg-1 produts-sidebar-filter">
                <!-- Search Form -->
                <div class="filter-widget mb-4">
                    <h4 class="fw-title">Search Products</h4>
                    <form asp-controller="Shop" asp-action="Index" method="get" id="searchForm">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control" value="@Model.SearchString" placeholder="Search...">
                            <div class="input-group-append">
                                <button class="btn btn-outline-secondary" type="submit">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                        @if (Model.CategoryId.HasValue)
                        {
                            <input type="hidden" name="categoryId" value="@Model.CategoryId" />
                        }
                        <input type="hidden" name="sortBy" value="@((int)Model.SortBy)" />
                    </form>
                </div>
                
                <!-- Categories Filter -->
                <div class="filter-widget">
                    <h4 class="fw-title">Categories</h4>
                    <ul class="filter-catagories">
                        <li>
                            <a asp-controller="Shop"
                               asp-action="Index"
                               asp-route-searchString="@Model.SearchString"
                               asp-route-sortBy="@((int)Model.SortBy)"
                               class="@(Model.CategoryId == null ? "text-primary font-weight-bold" : "")">
                                All Categories
                            </a>
                        </li>
                        @foreach (var category in Model.Categories)
                        {
                            <li>
                                <a asp-controller="Shop"
                                   asp-action="Index"
                                   asp-route-categoryId="@category.Id"
                                   asp-route-searchString="@Model.SearchString"
                                   asp-route-sortBy="@((int)Model.SortBy)"
                                   class="@(Model.CategoryId == category.Id ? "text-primary font-weight-bold" : "")">
                                    @category.Name
                                </a>
                            </li>
                        }
                    </ul>
                </div>
                
                <!-- Clear Filters -->
                @if (!string.IsNullOrEmpty(Model.SearchString) || Model.CategoryId.HasValue)
                {
                    <div class="filter-widget mt-3">
                        <a asp-controller="Shop" 
                           asp-action="Index" 
                           asp-route-sortBy="@((int)Model.SortBy)" 
                           class="btn btn-outline-secondary btn-sm">
                            <i class="fa fa-times"></i> Clear Filters
                        </a>
                    </div>
                }
            </div>
            <div class="col-lg-9 order-1 order-lg-2">
                <!-- Active Filters Display -->
                @if (!string.IsNullOrEmpty(Model.SearchString) || Model.CategoryId.HasValue)
                {
                    <div class="active-filters mb-3">
                        <span class="mr-2">Active Filters:</span>
                        @if (!string.IsNullOrEmpty(Model.SearchString))
                        {
                            <span class="badge badge-info mr-2">Search: @Model.SearchString</span>
                        }
                        @if (Model.CategoryId.HasValue)
                        {
                            var categoryName = Model.Categories.FirstOrDefault(c => c.Id == Model.CategoryId)?.Name;
                            <span class="badge badge-primary">Category: @categoryName</span>
                        }
                    </div>
                }

                <div class="product-show-option">
                    <div class="row">
                        <div class="col-lg-7 col-md-7">
                            <div class="select-option">
                                <form id="sortForm" asp-controller="Shop" asp-action="Index" method="get">
                                    <input type="hidden" name="searchString" value="@Model.SearchString" />
                                    @if (Model.CategoryId.HasValue)
                                    {
                                        <input type="hidden" name="categoryId" value="@Model.CategoryId" />
                                    }
                                    <select name="sortBy" class="sorting" onchange="document.getElementById('sortForm').submit()">
                                        @{
                                            int defaultSortValue = (int)SortOption.Default;
                                            int priceAscValue = (int)SortOption.PriceAscending;
                                            int priceDescValue = (int)SortOption.PriceDescending;
                                            int nameAscValue = (int)SortOption.NameAscending;
                                            int nameDescValue = (int)SortOption.NameDescending;
                                            int newestValue = (int)SortOption.Newest;
                                        }
                                        
                                        @if (Model.SortBy == SortOption.Default)
                                        {
                                            <option value="@defaultSortValue" selected>Default Sorting</option>
                                        }
                                        else
                                        {
                                            <option value="@defaultSortValue">Default Sorting</option>
                                        }
                                        
                                        @if (Model.SortBy == SortOption.PriceAscending)
                                        {
                                            <option value="@priceAscValue" selected>Price: Low to High</option>
                                        }
                                        else
                                        {
                                            <option value="@priceAscValue">Price: Low to High</option>
                                        }
                                        
                                        @if (Model.SortBy == SortOption.PriceDescending)
                                        {
                                            <option value="@priceDescValue" selected>Price: High to Low</option>
                                        }
                                        else
                                        {
                                            <option value="@priceDescValue">Price: High to Low</option>
                                        }
                                        
                                        @if (Model.SortBy == SortOption.NameAscending)
                                        {
                                            <option value="@nameAscValue" selected>Name: A to Z</option>
                                        }
                                        else
                                        {
                                            <option value="@nameAscValue">Name: A to Z</option>
                                        }
                                        
                                        @if (Model.SortBy == SortOption.NameDescending)
                                        {
                                            <option value="@nameDescValue" selected>Name: Z to A</option>
                                        }
                                        else
                                        {
                                            <option value="@nameDescValue">Name: Z to A</option>
                                        }
                                        
                                        @if (Model.SortBy == SortOption.Newest)
                                        {
                                            <option value="@newestValue" selected>Newest First</option>
                                        }
                                        else
                                        {
                                            <option value="@newestValue">Newest First</option>
                                        }
                                    </select>
                                </form>
                            </div>
                        </div>
                        <div class="col-lg-5 col-md-5 text-right">
                            @if (Model.TotalProducts > 0)
                            {
                                <p>Showing @((Model.CurrentPage - 1) * Model.PageSize + 1)- @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalProducts)) Of @Model.TotalProducts Products</p>
                            }
                            else
                            {
                                <p>0 Products Found</p>
                            }
                        </div>
                    </div>
                </div>
                <div class="product-list">
                    <div class="row">
                        @if (Model.Products == null || !Model.Products.Any())
                        {
                            <div class="alert alert-info text-center my-4 w-100">
                                No products found matching your criteria.
                                <a asp-controller="Shop" asp-action="Index">View all products</a>
                            </div>
                        }
                        else
                        {
                            @foreach (var product in Model.PaginatedProducts)
                            {
                                <div class="col-lg-4 col-sm-6">
                                    <div class="product-item">
                                        <div class="pi-pic">
                                            <a asp-controller="Shop" asp-action="DetailsProduct" asp-route-id="@product.Id">
                                                <img src="@product.ImageUrl" alt="@product.Name">
                                            </a>
                                            <div class="sale pp-sale">Sale</div>
                                            <div class="icon">
                                                <i class="icon_heart_alt"></i>
                                            </div>
                                            <ul>
                                                @if ((User?.Identity?.IsAuthenticated == true))
                                                {
                                                    <li class="w-icon active">
                                                        <a asp-controller="Cart" asp-action="Add" asp-route-id="@product.Id" style="display:inline;">
                                                            <i class="icon_bag_alt"></i>
                                                        </a>
                                                    </li>
                                                }
                                                <li class="quick-view"><a asp-controller="Shop" asp-action="DetailsProduct" asp-route-id="@product.Id">+ Quick View</a></li>
                                            </ul>
                                        </div>
                                        <div class="pi-text">
                                            <div class="catagory-name">@product.Category.Name</div>
                                            <a asp-controller="Shop" asp-action="DetailsProduct" asp-route-id="@product.Id">
                                                <h5>@product.Name</h5>
                                            </a>
                                            <div class="product-price">
                                                @product.Price
                                                <span>@product.Price</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }

                            <!-- Pagination -->
                            @if (Model.TotalPages > 1)
                            {
                                <div class="col-lg-12 text-center mt-5">
                                    <div class="pagination-container">
                                        <ul class="pagination justify-content-center">
                                            <!-- First Page -->
                                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                                <a class="page-link" asp-controller="Shop" asp-action="Index"
                                                   asp-route-page="1"
                                                   asp-route-categoryId="@Model.CategoryId"
                                                   asp-route-searchString="@Model.SearchString"
                                                   asp-route-sortBy="@((int)Model.SortBy)">
                                                    &laquo;
                                                </a>
                                            </li>

                                            <!-- Previous Page -->
                                            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                                                <a class="page-link" asp-controller="Shop" asp-action="Index"
                                                   asp-route-page="@(Model.CurrentPage - 1)"
                                                   asp-route-categoryId="@Model.CategoryId"
                                                   asp-route-searchString="@Model.SearchString"
                                                   asp-route-sortBy="@((int)Model.SortBy)">
                                                    &lt;
                                                </a>
                                            </li>

                                            @{
                                                const int pagesShown = 5;
                                                int startPage = Math.Max(1, Model.CurrentPage - (pagesShown / 2));
                                                int endPage = Math.Min(Model.TotalPages, startPage + pagesShown - 1);

                                                if (endPage - startPage + 1 < pagesShown)
                                                {
                                                    startPage = Math.Max(1, endPage - pagesShown + 1);
                                                }
                                            }

                                            @for (int i = startPage; i <= endPage; i++)
                                            {
                                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                                    <a class="page-link" asp-controller="Shop" asp-action="Index"
                                                       asp-route-page="@i"
                                                       asp-route-categoryId="@Model.CategoryId"
                                                       asp-route-searchString="@Model.SearchString"
                                                       asp-route-sortBy="@((int)Model.SortBy)">
                                                        @i
                                                    </a>
                                                </li>
                                            }

                                            <!-- Next Page -->
                                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                                <a class="page-link" asp-controller="Shop" asp-action="Index"
                                                   asp-route-page="@(Model.CurrentPage + 1)"
                                                   asp-route-categoryId="@Model.CategoryId"
                                                   asp-route-searchString="@Model.SearchString"
                                                   asp-route-sortBy="@((int)Model.SortBy)">
                                                    &gt;
                                                </a>
                                            </li>

                                            <!-- Last Page -->
                                            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                                                <a class="page-link" asp-controller="Shop" asp-action="Index"
                                                   asp-route-page="@Model.TotalPages"
                                                   asp-route-categoryId="@Model.CategoryId"
                                                   asp-route-searchString="@Model.SearchString"
                                                   asp-route-sortBy="@((int)Model.SortBy)">
                                                    &raquo;
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Product Shop Section End -->